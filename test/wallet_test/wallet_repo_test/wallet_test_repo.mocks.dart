// Mocks generated by Mockito 5.4.3 from annotations
// in hr_app_flutter/test/wallet_test/wallet_test_repo/wallet_test_repo.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:hr_app_flutter/features/wallet/data/rest_clients/wallet_api_client.dart'
    as _i2;
import 'package:hr_app_flutter/features/wallet/model/coins_screen/coins_info/coins_info.dart'
    as _i4;
import 'package:hr_app_flutter/features/wallet/model/coins_screen/coins_reward/coins_reward.dart'
    as _i5;
import 'package:hr_app_flutter/features/wallet/model/wallet/wallet.dart' as _i6;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [IWalletProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockIWalletProvider extends _i1.Mock implements _i2.IWalletProvider {
  @override
  _i3.Future<({int avarageCoins, int balance})> getBalance(
          {required String? accessToken}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getBalance,
          [],
          {#accessToken: accessToken},
        ),
        returnValue: _i3.Future<({int avarageCoins, int balance})>.value(
            (avarageCoins: 0, balance: 0)),
        returnValueForMissingStub:
            _i3.Future<({int avarageCoins, int balance})>.value(
                (avarageCoins: 0, balance: 0)),
      ) as _i3.Future<({int avarageCoins, int balance})>);
  @override
  _i3.Future<List<_i4.CoinsInfo>> getCoinsInfo(
          {required String? accessToken}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCoinsInfo,
          [],
          {#accessToken: accessToken},
        ),
        returnValue: _i3.Future<List<_i4.CoinsInfo>>.value(<_i4.CoinsInfo>[]),
        returnValueForMissingStub:
            _i3.Future<List<_i4.CoinsInfo>>.value(<_i4.CoinsInfo>[]),
      ) as _i3.Future<List<_i4.CoinsInfo>>);
  @override
  _i3.Future<List<_i5.CoinsReward>> getInfoCoinsReward(
          {required String? accessToken}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getInfoCoinsReward,
          [],
          {#accessToken: accessToken},
        ),
        returnValue:
            _i3.Future<List<_i5.CoinsReward>>.value(<_i5.CoinsReward>[]),
        returnValueForMissingStub:
            _i3.Future<List<_i5.CoinsReward>>.value(<_i5.CoinsReward>[]),
      ) as _i3.Future<List<_i5.CoinsReward>>);
  @override
  _i3.Future<List<_i6.Transaction>?> getTransactions(
          {required String? accessToken}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTransactions,
          [],
          {#accessToken: accessToken},
        ),
        returnValue: _i3.Future<List<_i6.Transaction>?>.value(),
        returnValueForMissingStub: _i3.Future<List<_i6.Transaction>?>.value(),
      ) as _i3.Future<List<_i6.Transaction>?>);
  @override
  _i3.Future<int> sendCoinsToOtherUser({
    required String? accessToken,
    required int? amount,
    required int? userId,
    required String? message,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendCoinsToOtherUser,
          [],
          {
            #accessToken: accessToken,
            #amount: amount,
            #userId: userId,
            #message: message,
          },
        ),
        returnValue: _i3.Future<int>.value(0),
        returnValueForMissingStub: _i3.Future<int>.value(0),
      ) as _i3.Future<int>);
  @override
  _i3.Future<int> sendCoinsToBracer({
    required String? accessToken,
    required int? amount,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendCoinsToBracer,
          [],
          {
            #accessToken: accessToken,
            #amount: amount,
          },
        ),
        returnValue: _i3.Future<int>.value(0),
        returnValueForMissingStub: _i3.Future<int>.value(0),
      ) as _i3.Future<int>);
}
