// Mocks generated by Mockito 5.4.3 from annotations
// in hr_app_flutter/test/wallet_test/wallet_repo_test/wallet_repo_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:hr_app_flutter/features/wallet/data/rest_clients/wallet_api_client.dart'
    as _i4;
import 'package:hr_app_flutter/features/wallet/model/coins_screen/coins_info/coins_info.dart'
    as _i2;
import 'package:hr_app_flutter/features/wallet/model/coins_screen/coins_reward/coins_reward.dart'
    as _i3;
import 'package:hr_app_flutter/features/wallet/model/wallet/wallet.dart' as _i6;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i7;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _Fake$CoinsInfoCopyWith_0<$Res> extends _i1.SmartFake
    implements _i2.$CoinsInfoCopyWith<$Res> {
  _Fake$CoinsInfoCopyWith_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _Fake$CoinsRewardCopyWith_1<$Res> extends _i1.SmartFake
    implements _i3.$CoinsRewardCopyWith<$Res> {
  _Fake$CoinsRewardCopyWith_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [IWalletProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockIWalletProvider extends _i1.Mock implements _i4.IWalletProvider {
  @override
  _i5.Future<({int avarageCoins, int balance})> getBalance() =>
      (super.noSuchMethod(
        Invocation.method(
          #getBalance,
          [],
        ),
        returnValue: _i5.Future<({int avarageCoins, int balance})>.value(
            (avarageCoins: 0, balance: 0)),
        returnValueForMissingStub:
            _i5.Future<({int avarageCoins, int balance})>.value(
                (avarageCoins: 0, balance: 0)),
      ) as _i5.Future<({int avarageCoins, int balance})>);
  @override
  _i5.Future<List<_i2.CoinsInfo>> getCoinsInfo() => (super.noSuchMethod(
        Invocation.method(
          #getCoinsInfo,
          [],
        ),
        returnValue: _i5.Future<List<_i2.CoinsInfo>>.value(<_i2.CoinsInfo>[]),
        returnValueForMissingStub:
            _i5.Future<List<_i2.CoinsInfo>>.value(<_i2.CoinsInfo>[]),
      ) as _i5.Future<List<_i2.CoinsInfo>>);
  @override
  _i5.Future<List<_i3.CoinsReward>> getInfoCoinsReward() => (super.noSuchMethod(
        Invocation.method(
          #getInfoCoinsReward,
          [],
        ),
        returnValue:
            _i5.Future<List<_i3.CoinsReward>>.value(<_i3.CoinsReward>[]),
        returnValueForMissingStub:
            _i5.Future<List<_i3.CoinsReward>>.value(<_i3.CoinsReward>[]),
      ) as _i5.Future<List<_i3.CoinsReward>>);
  @override
  _i5.Future<List<_i6.Transaction>?> getTransactions() => (super.noSuchMethod(
        Invocation.method(
          #getTransactions,
          [],
        ),
        returnValue: _i5.Future<List<_i6.Transaction>?>.value(),
        returnValueForMissingStub: _i5.Future<List<_i6.Transaction>?>.value(),
      ) as _i5.Future<List<_i6.Transaction>?>);
  @override
  _i5.Future<int> sendCoinsToOtherUser({
    required int? amount,
    required int? userId,
    required String? message,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendCoinsToOtherUser,
          [],
          {
            #amount: amount,
            #userId: userId,
            #message: message,
          },
        ),
        returnValue: _i5.Future<int>.value(0),
        returnValueForMissingStub: _i5.Future<int>.value(0),
      ) as _i5.Future<int>);
  @override
  _i5.Future<int> sendCoinsToBracer({required int? amount}) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendCoinsToBracer,
          [],
          {#amount: amount},
        ),
        returnValue: _i5.Future<int>.value(0),
        returnValueForMissingStub: _i5.Future<int>.value(0),
      ) as _i5.Future<int>);
}

/// A class which mocks [CoinsInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockCoinsInfo extends _i1.Mock implements _i2.CoinsInfo {
  @override
  int get id => (super.noSuchMethod(
        Invocation.getter(#id),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);
  @override
  int get price => (super.noSuchMethod(
        Invocation.getter(#price),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);
  @override
  String get title => (super.noSuchMethod(
        Invocation.getter(#title),
        returnValue: _i7.dummyValue<String>(
          this,
          Invocation.getter(#title),
        ),
        returnValueForMissingStub: _i7.dummyValue<String>(
          this,
          Invocation.getter(#title),
        ),
      ) as String);
  @override
  _i2.$CoinsInfoCopyWith<_i2.CoinsInfo> get copyWith => (super.noSuchMethod(
        Invocation.getter(#copyWith),
        returnValue: _Fake$CoinsInfoCopyWith_0<_i2.CoinsInfo>(
          this,
          Invocation.getter(#copyWith),
        ),
        returnValueForMissingStub: _Fake$CoinsInfoCopyWith_0<_i2.CoinsInfo>(
          this,
          Invocation.getter(#copyWith),
        ),
      ) as _i2.$CoinsInfoCopyWith<_i2.CoinsInfo>);
  @override
  Map<String, dynamic> toJson() => (super.noSuchMethod(
        Invocation.method(
          #toJson,
          [],
        ),
        returnValue: <String, dynamic>{},
        returnValueForMissingStub: <String, dynamic>{},
      ) as Map<String, dynamic>);
}

/// A class which mocks [CoinsReward].
///
/// See the documentation for Mockito's code generation for more information.
class MockCoinsReward extends _i1.Mock implements _i3.CoinsReward {
  @override
  int get id => (super.noSuchMethod(
        Invocation.getter(#id),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);
  @override
  int get price => (super.noSuchMethod(
        Invocation.getter(#price),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);
  @override
  String get title => (super.noSuchMethod(
        Invocation.getter(#title),
        returnValue: _i7.dummyValue<String>(
          this,
          Invocation.getter(#title),
        ),
        returnValueForMissingStub: _i7.dummyValue<String>(
          this,
          Invocation.getter(#title),
        ),
      ) as String);
  @override
  _i3.$CoinsRewardCopyWith<_i3.CoinsReward> get copyWith => (super.noSuchMethod(
        Invocation.getter(#copyWith),
        returnValue: _Fake$CoinsRewardCopyWith_1<_i3.CoinsReward>(
          this,
          Invocation.getter(#copyWith),
        ),
        returnValueForMissingStub: _Fake$CoinsRewardCopyWith_1<_i3.CoinsReward>(
          this,
          Invocation.getter(#copyWith),
        ),
      ) as _i3.$CoinsRewardCopyWith<_i3.CoinsReward>);
  @override
  Map<String, dynamic> toJson() => (super.noSuchMethod(
        Invocation.method(
          #toJson,
          [],
        ),
        returnValue: <String, dynamic>{},
        returnValueForMissingStub: <String, dynamic>{},
      ) as Map<String, dynamic>);
}
