// Mocks generated by Mockito 5.4.3 from annotations
// in hr_app_flutter/test/service_test/service_repo_test/service_repo_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;

import 'package:hr_app_flutter/features/services/data/rest_clients/service_api_client.dart'
    as _i5;
import 'package:hr_app_flutter/features/services/model/bag_report_entity/bag_report_entity.dart'
    as _i4;
import 'package:hr_app_flutter/features/services/model/lean_productions_entity/lean_production_form_entity/lean_production_form_entity.dart'
    as _i8;
import 'package:hr_app_flutter/features/services/model/lean_productions_entity/my_lean_productions_entity/my_lean_productions_entity.dart'
    as _i7;
import 'package:hr_app_flutter/features/services/model/schedule_bus_entity/schedule_bus_entity.dart'
    as _i2;
import 'package:hr_app_flutter/features/services/model/service/service.dart'
    as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i9;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeScheduleBus_0 extends _i1.SmartFake implements _i2.ScheduleBus {
  _FakeScheduleBus_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePermissions_1 extends _i1.SmartFake implements _i3.Permissions {
  _FakePermissions_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _Fake$ServiceCopyWith_2<$Res> extends _i1.SmartFake
    implements _i3.$ServiceCopyWith<$Res> {
  _Fake$ServiceCopyWith_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _Fake$ScheduleBusCopyWith_3<$Res> extends _i1.SmartFake
    implements _i2.$ScheduleBusCopyWith<$Res> {
  _Fake$ScheduleBusCopyWith_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _Fake$BagReportEntityCopyWith_4<$Res> extends _i1.SmartFake
    implements _i4.$BagReportEntityCopyWith<$Res> {
  _Fake$BagReportEntityCopyWith_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [IServiceProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockIServiceProvider extends _i1.Mock implements _i5.IServiceProvider {
  @override
  _i6.Future<List<_i3.Service>> getServices() => (super.noSuchMethod(
        Invocation.method(
          #getServices,
          [],
        ),
        returnValue: _i6.Future<List<_i3.Service>>.value(<_i3.Service>[]),
        returnValueForMissingStub:
            _i6.Future<List<_i3.Service>>.value(<_i3.Service>[]),
      ) as _i6.Future<List<_i3.Service>>);
  @override
  _i6.Future<_i2.ScheduleBus> getScheduleBus() => (super.noSuchMethod(
        Invocation.method(
          #getScheduleBus,
          [],
        ),
        returnValue: _i6.Future<_i2.ScheduleBus>.value(_FakeScheduleBus_0(
          this,
          Invocation.method(
            #getScheduleBus,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i2.ScheduleBus>.value(_FakeScheduleBus_0(
          this,
          Invocation.method(
            #getScheduleBus,
            [],
          ),
        )),
      ) as _i6.Future<_i2.ScheduleBus>);
  @override
  _i6.Future<List<_i7.MyLeanProductionsEntity>> getMyLeanProductions() =>
      (super.noSuchMethod(
        Invocation.method(
          #getMyLeanProductions,
          [],
        ),
        returnValue: _i6.Future<List<_i7.MyLeanProductionsEntity>>.value(
            <_i7.MyLeanProductionsEntity>[]),
        returnValueForMissingStub:
            _i6.Future<List<_i7.MyLeanProductionsEntity>>.value(
                <_i7.MyLeanProductionsEntity>[]),
      ) as _i6.Future<List<_i7.MyLeanProductionsEntity>>);
  @override
  _i6.Future<bool> sendFormLeanProduction(
          {required _i8.LeanProductionFormEntity? formEntity}) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendFormLeanProduction,
          [],
          {#formEntity: formEntity},
        ),
        returnValue: _i6.Future<bool>.value(false),
        returnValueForMissingStub: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);
  @override
  _i6.Future<void> downloadFileWithLeanProduction({required String? url}) =>
      (super.noSuchMethod(
        Invocation.method(
          #downloadFileWithLeanProduction,
          [],
          {#url: url},
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
  @override
  _i6.Future<bool> submitBagReportForm(
          {required _i4.BagReportEntity? bagReportEntity}) =>
      (super.noSuchMethod(
        Invocation.method(
          #submitBagReportForm,
          [],
          {#bagReportEntity: bagReportEntity},
        ),
        returnValue: _i6.Future<bool>.value(false),
        returnValueForMissingStub: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);
}

/// A class which mocks [Service].
///
/// See the documentation for Mockito's code generation for more information.
class MockService extends _i1.Mock implements _i3.Service {
  @override
  int get id => (super.noSuchMethod(
        Invocation.getter(#id),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);
  @override
  String get name => (super.noSuchMethod(
        Invocation.getter(#name),
        returnValue: _i9.dummyValue<String>(
          this,
          Invocation.getter(#name),
        ),
        returnValueForMissingStub: _i9.dummyValue<String>(
          this,
          Invocation.getter(#name),
        ),
      ) as String);
  @override
  _i3.Permissions get permissions => (super.noSuchMethod(
        Invocation.getter(#permissions),
        returnValue: _FakePermissions_1(
          this,
          Invocation.getter(#permissions),
        ),
        returnValueForMissingStub: _FakePermissions_1(
          this,
          Invocation.getter(#permissions),
        ),
      ) as _i3.Permissions);
  @override
  _i3.$ServiceCopyWith<_i3.Service> get copyWith => (super.noSuchMethod(
        Invocation.getter(#copyWith),
        returnValue: _Fake$ServiceCopyWith_2<_i3.Service>(
          this,
          Invocation.getter(#copyWith),
        ),
        returnValueForMissingStub: _Fake$ServiceCopyWith_2<_i3.Service>(
          this,
          Invocation.getter(#copyWith),
        ),
      ) as _i3.$ServiceCopyWith<_i3.Service>);
  @override
  Map<String, dynamic> toJson() => (super.noSuchMethod(
        Invocation.method(
          #toJson,
          [],
        ),
        returnValue: <String, dynamic>{},
        returnValueForMissingStub: <String, dynamic>{},
      ) as Map<String, dynamic>);
}

/// A class which mocks [ScheduleBus].
///
/// See the documentation for Mockito's code generation for more information.
class MockScheduleBus extends _i1.Mock implements _i2.ScheduleBus {
  @override
  List<_i2.City> get result => (super.noSuchMethod(
        Invocation.getter(#result),
        returnValue: <_i2.City>[],
        returnValueForMissingStub: <_i2.City>[],
      ) as List<_i2.City>);
  @override
  _i2.$ScheduleBusCopyWith<_i2.ScheduleBus> get copyWith => (super.noSuchMethod(
        Invocation.getter(#copyWith),
        returnValue: _Fake$ScheduleBusCopyWith_3<_i2.ScheduleBus>(
          this,
          Invocation.getter(#copyWith),
        ),
        returnValueForMissingStub: _Fake$ScheduleBusCopyWith_3<_i2.ScheduleBus>(
          this,
          Invocation.getter(#copyWith),
        ),
      ) as _i2.$ScheduleBusCopyWith<_i2.ScheduleBus>);
  @override
  Map<String, dynamic> toJson() => (super.noSuchMethod(
        Invocation.method(
          #toJson,
          [],
        ),
        returnValue: <String, dynamic>{},
        returnValueForMissingStub: <String, dynamic>{},
      ) as Map<String, dynamic>);
}

/// A class which mocks [BagReportEntity].
///
/// See the documentation for Mockito's code generation for more information.
class MockBagReportEntity extends _i1.Mock implements _i4.BagReportEntity {
  @override
  String get title => (super.noSuchMethod(
        Invocation.getter(#title),
        returnValue: _i9.dummyValue<String>(
          this,
          Invocation.getter(#title),
        ),
        returnValueForMissingStub: _i9.dummyValue<String>(
          this,
          Invocation.getter(#title),
        ),
      ) as String);
  @override
  String get description => (super.noSuchMethod(
        Invocation.getter(#description),
        returnValue: _i9.dummyValue<String>(
          this,
          Invocation.getter(#description),
        ),
        returnValueForMissingStub: _i9.dummyValue<String>(
          this,
          Invocation.getter(#description),
        ),
      ) as String);
  @override
  List<String> get pathsToFiles => (super.noSuchMethod(
        Invocation.getter(#pathsToFiles),
        returnValue: <String>[],
        returnValueForMissingStub: <String>[],
      ) as List<String>);
  @override
  _i4.$BagReportEntityCopyWith<_i4.BagReportEntity> get copyWith =>
      (super.noSuchMethod(
        Invocation.getter(#copyWith),
        returnValue: _Fake$BagReportEntityCopyWith_4<_i4.BagReportEntity>(
          this,
          Invocation.getter(#copyWith),
        ),
        returnValueForMissingStub:
            _Fake$BagReportEntityCopyWith_4<_i4.BagReportEntity>(
          this,
          Invocation.getter(#copyWith),
        ),
      ) as _i4.$BagReportEntityCopyWith<_i4.BagReportEntity>);
  @override
  Map<String, dynamic> toJson() => (super.noSuchMethod(
        Invocation.method(
          #toJson,
          [],
        ),
        returnValue: <String, dynamic>{},
        returnValueForMissingStub: <String, dynamic>{},
      ) as Map<String, dynamic>);
}
