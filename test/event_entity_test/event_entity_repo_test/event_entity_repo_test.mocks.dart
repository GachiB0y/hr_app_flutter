// Mocks generated by Mockito 5.4.3 from annotations
// in hr_app_flutter/test/event_entity_test/event_entity_repo_test/event_entity_repo_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:hr_app_flutter/features/news/data/rest_clients/event_entity_api_client.dart'
    as _i3;
import 'package:hr_app_flutter/features/news/model/event_entity/new_event_entity.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEventEntity_0 extends _i1.SmartFake implements _i2.EventEntity {
  _FakeEventEntity_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [IEventsEntityProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockIEventsEntityProvider extends _i1.Mock
    implements _i3.IEventsEntityProvider {
  @override
  _i4.Future<List<_i2.EventEntity>> getEvents({required String? accessToken}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getEvents,
          [],
          {#accessToken: accessToken},
        ),
        returnValue:
            _i4.Future<List<_i2.EventEntity>>.value(<_i2.EventEntity>[]),
        returnValueForMissingStub:
            _i4.Future<List<_i2.EventEntity>>.value(<_i2.EventEntity>[]),
      ) as _i4.Future<List<_i2.EventEntity>>);
  @override
  _i4.Future<_i2.EventEntity> getNewsById({
    required String? accessToken,
    required String? id,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getNewsById,
          [],
          {
            #accessToken: accessToken,
            #id: id,
          },
        ),
        returnValue: _i4.Future<_i2.EventEntity>.value(_FakeEventEntity_0(
          this,
          Invocation.method(
            #getNewsById,
            [],
            {
              #accessToken: accessToken,
              #id: id,
            },
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.EventEntity>.value(_FakeEventEntity_0(
          this,
          Invocation.method(
            #getNewsById,
            [],
            {
              #accessToken: accessToken,
              #id: id,
            },
          ),
        )),
      ) as _i4.Future<_i2.EventEntity>);
  @override
  _i4.Future<List<_i2.EventEntity>> getApprovmentEvents(
          {required String? accessToken}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getApprovmentEvents,
          [],
          {#accessToken: accessToken},
        ),
        returnValue:
            _i4.Future<List<_i2.EventEntity>>.value(<_i2.EventEntity>[]),
        returnValueForMissingStub:
            _i4.Future<List<_i2.EventEntity>>.value(<_i2.EventEntity>[]),
      ) as _i4.Future<List<_i2.EventEntity>>);
  @override
  _i4.Future<List<_i2.Category>> getCategory({required String? accessToken}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCategory,
          [],
          {#accessToken: accessToken},
        ),
        returnValue: _i4.Future<List<_i2.Category>>.value(<_i2.Category>[]),
        returnValueForMissingStub:
            _i4.Future<List<_i2.Category>>.value(<_i2.Category>[]),
      ) as _i4.Future<List<_i2.Category>>);
  @override
  _i4.Future<bool> createNewEventEntity({
    required String? accessToken,
    required String? title,
    required String? description,
    required String? startDate,
    required String? endDate,
    required List<String>? paths,
    required List<String>? categories,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createNewEventEntity,
          [],
          {
            #accessToken: accessToken,
            #title: title,
            #description: description,
            #startDate: startDate,
            #endDate: endDate,
            #paths: paths,
            #categories: categories,
          },
        ),
        returnValue: _i4.Future<bool>.value(false),
        returnValueForMissingStub: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);
  @override
  _i4.Future<bool> approvementNews({
    required String? accessToken,
    required String? id,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #approvementNews,
          [],
          {
            #accessToken: accessToken,
            #id: id,
          },
        ),
        returnValue: _i4.Future<bool>.value(false),
        returnValueForMissingStub: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);
  @override
  _i4.Future<bool> moveInArchiveNews({
    required String? accessToken,
    required String? id,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #moveInArchiveNews,
          [],
          {
            #accessToken: accessToken,
            #id: id,
          },
        ),
        returnValue: _i4.Future<bool>.value(false),
        returnValueForMissingStub: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);
}
