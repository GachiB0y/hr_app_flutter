// Mocks generated by Mockito 5.4.3 from annotations
// in hr_app_flutter/test/bag_report_test/bag_report_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:hr_app_flutter/features/services/data/repo/service_repository.dart'
    as _i4;
import 'package:hr_app_flutter/features/services/model/bag_report_entity/bag_report_entity.dart'
    as _i3;
import 'package:hr_app_flutter/features/services/model/schedule_bus_entity/schedule_bus_entity.dart'
    as _i2;
import 'package:hr_app_flutter/features/services/model/service/service.dart'
    as _i6;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i7;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeScheduleBus_0 extends _i1.SmartFake implements _i2.ScheduleBus {
  _FakeScheduleBus_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _Fake$BagReportEntityCopyWith_1<$Res> extends _i1.SmartFake
    implements _i3.$BagReportEntityCopyWith<$Res> {
  _Fake$BagReportEntityCopyWith_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [IServiceRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockIServiceRepository extends _i1.Mock
    implements _i4.IServiceRepository {
  @override
  _i5.Future<List<_i6.Service>> getServices({required String? accessToken}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getServices,
          [],
          {#accessToken: accessToken},
        ),
        returnValue: _i5.Future<List<_i6.Service>>.value(<_i6.Service>[]),
        returnValueForMissingStub:
            _i5.Future<List<_i6.Service>>.value(<_i6.Service>[]),
      ) as _i5.Future<List<_i6.Service>>);
  @override
  _i5.Future<_i2.ScheduleBus> getScheduleBus({required String? accessToken}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getScheduleBus,
          [],
          {#accessToken: accessToken},
        ),
        returnValue: _i5.Future<_i2.ScheduleBus>.value(_FakeScheduleBus_0(
          this,
          Invocation.method(
            #getScheduleBus,
            [],
            {#accessToken: accessToken},
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i2.ScheduleBus>.value(_FakeScheduleBus_0(
          this,
          Invocation.method(
            #getScheduleBus,
            [],
            {#accessToken: accessToken},
          ),
        )),
      ) as _i5.Future<_i2.ScheduleBus>);
  @override
  _i5.Future<bool> submitBagReportForm({
    required String? accessToken,
    required _i3.BagReportEntity? bagReportEntity,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #submitBagReportForm,
          [],
          {
            #accessToken: accessToken,
            #bagReportEntity: bagReportEntity,
          },
        ),
        returnValue: _i5.Future<bool>.value(false),
        returnValueForMissingStub: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);
}

/// A class which mocks [BagReportEntity].
///
/// See the documentation for Mockito's code generation for more information.
class MockBagReportEntity extends _i1.Mock implements _i3.BagReportEntity {
  @override
  String get title => (super.noSuchMethod(
        Invocation.getter(#title),
        returnValue: _i7.dummyValue<String>(
          this,
          Invocation.getter(#title),
        ),
        returnValueForMissingStub: _i7.dummyValue<String>(
          this,
          Invocation.getter(#title),
        ),
      ) as String);
  @override
  String get description => (super.noSuchMethod(
        Invocation.getter(#description),
        returnValue: _i7.dummyValue<String>(
          this,
          Invocation.getter(#description),
        ),
        returnValueForMissingStub: _i7.dummyValue<String>(
          this,
          Invocation.getter(#description),
        ),
      ) as String);
  @override
  List<String> get pathsToFiles => (super.noSuchMethod(
        Invocation.getter(#pathsToFiles),
        returnValue: <String>[],
        returnValueForMissingStub: <String>[],
      ) as List<String>);
  @override
  _i3.$BagReportEntityCopyWith<_i3.BagReportEntity> get copyWith =>
      (super.noSuchMethod(
        Invocation.getter(#copyWith),
        returnValue: _Fake$BagReportEntityCopyWith_1<_i3.BagReportEntity>(
          this,
          Invocation.getter(#copyWith),
        ),
        returnValueForMissingStub:
            _Fake$BagReportEntityCopyWith_1<_i3.BagReportEntity>(
          this,
          Invocation.getter(#copyWith),
        ),
      ) as _i3.$BagReportEntityCopyWith<_i3.BagReportEntity>);
  @override
  Map<String, dynamic> toJson() => (super.noSuchMethod(
        Invocation.method(
          #toJson,
          [],
        ),
        returnValue: <String, dynamic>{},
        returnValueForMissingStub: <String, dynamic>{},
      ) as Map<String, dynamic>);
}
